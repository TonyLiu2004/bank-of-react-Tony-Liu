{"ast":null,"code":"/*==================================================\r\nsrc/App.js\r\n\r\nThis is the top-level component of the app.\r\nIt contains the top-level state.\r\n==================================================*/import React,{Component}from'react';import{BrowserRouter as Router,Route}from'react-router-dom';// Import other components\nimport Home from'./components/Home';import UserProfile from'./components/UserProfile';import LogIn from'./components/Login';import Credits from'./components/Credits';import Debits from'./components/Debits';import NavBar from'./components/NavBar';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";class App extends Component{constructor(){// Create and initialize state\nsuper();this.mockLogIn=logInInfo=>{const newUser={...this.state.currentUser};newUser.userName=logInInfo.userName;this.setState({currentUser:newUser});};this.addCredit=credit=>{this.setState({creditList:credit});this.calculateBalance();};this.calculateBalance=()=>{let balance=this.state.accountBalance;this.state.creditList.forEach(credit=>{balance+=credit.amount;});this.state.debitList.forEach(debit=>{balance-=debit.amount;});this.setState({accountBalance:balance});};this.state={accountBalance:1234567.89,creditList:[{name:\"Shoes\",amount:120.00},{name:\"Shopping\",amount:100.00}],debitList:[],currentUser:{userName:'Joe Smith',memberSince:'11/22/99'}};}componentDidMount(){this.calculateBalance();}// Update state's currentUser (userName) after \"Log In\" button is clicked\n// Create Routes and React elements to be rendered using React components\nrender(){// Create React elements and pass input props to components\nconst HomeComponent=()=>/*#__PURE__*/_jsx(Home,{accountBalance:this.state.accountBalance});const UserProfileComponent=()=>/*#__PURE__*/_jsx(UserProfile,{userName:this.state.currentUser.userName,memberSince:this.state.currentUser.memberSince});const LogInComponent=()=>/*#__PURE__*/_jsx(LogIn,{user:this.state.currentUser,mockLogIn:this.mockLogIn});const CreditsComponent=()=>/*#__PURE__*/_jsx(Credits,{credits:this.state.creditList,updateCredits:this.addCredit});const DebitsComponent=()=>/*#__PURE__*/_jsx(Debits,{debits:this.state.debitList});// Important: Include the \"basename\" in Router, which is needed for deploying the React app to GitHub Pages\nreturn/*#__PURE__*/_jsxs(Router,{basename:\"/bank-of-react-Tony-Liu\",children:[/*#__PURE__*/_jsx(NavBar,{accountBalance:this.state.accountBalance}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(Route,{exact:true,path:\"/\",render:HomeComponent}),/*#__PURE__*/_jsx(Route,{exact:true,path:\"/userProfile\",render:UserProfileComponent}),/*#__PURE__*/_jsx(Route,{exact:true,path:\"/login\",render:LogInComponent}),/*#__PURE__*/_jsx(Route,{exact:true,path:\"/credits\",render:CreditsComponent}),/*#__PURE__*/_jsx(Route,{exact:true,path:\"/debits\",render:DebitsComponent})]})]});}}export default App;","map":{"version":3,"names":["React","Component","BrowserRouter","Router","Route","Home","UserProfile","LogIn","Credits","Debits","NavBar","jsx","_jsx","jsxs","_jsxs","App","constructor","mockLogIn","logInInfo","newUser","state","currentUser","userName","setState","addCredit","credit","creditList","calculateBalance","balance","accountBalance","forEach","amount","debitList","debit","name","memberSince","componentDidMount","render","HomeComponent","UserProfileComponent","LogInComponent","user","CreditsComponent","credits","updateCredits","DebitsComponent","debits","basename","children","exact","path"],"sources":["C:/Users/incre/OneDrive/Documents/bank-of-react-Tony-Liu/src/App.js"],"sourcesContent":["/*==================================================\r\nsrc/App.js\r\n\r\nThis is the top-level component of the app.\r\nIt contains the top-level state.\r\n==================================================*/\r\nimport React, {Component} from 'react';\r\nimport {BrowserRouter as Router, Route} from 'react-router-dom';\r\n\r\n// Import other components\r\nimport Home from './components/Home';\r\nimport UserProfile from './components/UserProfile';\r\nimport LogIn from './components/Login';\r\nimport Credits from './components/Credits';\r\nimport Debits from './components/Debits';\r\nimport NavBar from './components/NavBar'\r\n\r\nclass App extends Component {\r\n  constructor() {  // Create and initialize state\r\n    super(); \r\n    this.state = {\r\n      accountBalance: 1234567.89,\r\n      creditList: [{name:\"Shoes\", amount:120.00},{name:\"Shopping\", amount:100.00}],\r\n      debitList: [],\r\n      currentUser: {\r\n        userName: 'Joe Smith',\r\n        memberSince: '11/22/99',\r\n      }\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.calculateBalance();\r\n  }\r\n  // Update state's currentUser (userName) after \"Log In\" button is clicked\r\n  mockLogIn = (logInInfo) => {  \r\n    const newUser = {...this.state.currentUser};\r\n    newUser.userName = logInInfo.userName;\r\n    this.setState({currentUser: newUser})\r\n  }\r\n\r\n  addCredit = (credit) => {\r\n    this.setState({creditList: credit});\r\n    this.calculateBalance();\r\n  }\r\n\r\n  calculateBalance = () => {\r\n    let balance = this.state.accountBalance;\r\n    this.state.creditList.forEach(credit => {\r\n      balance += credit.amount;\r\n    });\r\n    this.state.debitList.forEach(debit => {\r\n      balance -= debit.amount;\r\n    });\r\n    this.setState({accountBalance: balance});\r\n  }\r\n  // Create Routes and React elements to be rendered using React components\r\n  render() {  \r\n    // Create React elements and pass input props to components\r\n    const HomeComponent = () => (<Home accountBalance={this.state.accountBalance} />)\r\n    const UserProfileComponent = () => (\r\n      <UserProfile userName={this.state.currentUser.userName} memberSince={this.state.currentUser.memberSince} />\r\n    )\r\n    const LogInComponent = () => (<LogIn user={this.state.currentUser} mockLogIn={this.mockLogIn} />)\r\n    const CreditsComponent = () => (<Credits credits={this.state.creditList} updateCredits={this.addCredit} />) \r\n    const DebitsComponent = () => (<Debits debits={this.state.debitList} />) \r\n\r\n    // Important: Include the \"basename\" in Router, which is needed for deploying the React app to GitHub Pages\r\n    return (\r\n      <Router basename=\"/bank-of-react-Tony-Liu\">\r\n        <NavBar accountBalance={this.state.accountBalance} />\r\n        <div>\r\n          <Route exact path=\"/\" render={HomeComponent}/>\r\n          <Route exact path=\"/userProfile\" render={UserProfileComponent}/>\r\n          <Route exact path=\"/login\" render={LogInComponent}/>\r\n          <Route exact path=\"/credits\" render={CreditsComponent}/>\r\n          <Route exact path=\"/debits\" render={DebitsComponent}/>\r\n        </div>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}